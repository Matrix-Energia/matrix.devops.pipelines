name: k8s SWA Pipeline - Latest
# SWA Uses a .env instead of .yaml encoded file
env:
  HELM_VERSION: v3.9.2
  CHART_REVISION: latest
  CHART_PATH: charts
  CHART_TYPE: gke-webpage
  PIPELINE_REVISION: latest
  PIPELINE_PATH: _PIPELINE_
  DOCKERFILE_PATH: Dockerfiles/swa
  OUT_DIR: TMP_OUT
on:
  workflow_call:
    inputs:
      node-version:
        type: string
        required: true
        default: 16.14.2
      build-command:
        type: string
        required: false
        default: npm run ci && npm run build
      namespace:
        type: string
        required: false
        default: matrix-webpages
      external:
        type: boolean
        required: false
        default: true
      output-dir:
        type: string
        required: false
        default: dist
      tokenName:
        type: string
        required: false
        default: GIT_TOKEN
jobs:
  swa:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      # Configuration Setup
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Install gcloud plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: clone repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GIT_TOKEN_CUSTOM }}


      - name: dev
        if: ( github.ref_name != 'main' && github.ref_name != 'k8s-prd' && github.ref_name != 'hml' && github.ref_name != 'k8s-hml')
        run: |
          echo "ENVIRONMENT=DEV" >> $GITHUB_ENV
          echo "APP_REVISION=${GITHUB_REF_NAME//\//-}" >> $GITHUB_ENV
          echo "PROJECT_NUMBER=62196059690"            >> $GITHUB_ENV
          echo GKE_REGION="us-east1-b"                 >> $GITHUB_ENV

      - name: hml
        if: github.ref_name == 'hml'
        run: |
          echo "ENVIRONMENT=HML" >> $GITHUB_ENV
          echo "APP_REVISION=hml" >> $GITHUB_ENV
          echo "PROJECT_NUMBER=892092479263" >> $GITHUB_ENV
          echo GKE_REGION="us-east1-b"       >> $GITHUB_ENV

      - name: hml-k8s
        if: github.ref_name == 'k8s-hml'
        run: |
          echo "ENVIRONMENT=HML" >> $GITHUB_ENV
          echo "APP_REVISION=hml" >> $GITHUB_ENV
          echo "PROJECT_NUMBER=892092479263" >> $GITHUB_ENV
          echo GKE_REGION="us-east1-b"       >> $GITHUB_ENV

      - name: prd
        if: github.ref_name == 'main'
        run: |
          echo "ENVIRONMENT=PRD" >> $GITHUB_ENV
          echo "APP_REVISION=prd" >> $GITHUB_ENV
          echo "PROJECT_NUMBER=733870648638" >> $GITHUB_ENV
          echo GKE_REGION="us-east1"       >> $GITHUB_ENV     

      - name: prd-k8s
        if: github.ref_name == 'k8s-prd'
        run: |
          echo "ENVIRONMENT=PRD" >> $GITHUB_ENV
          echo "APP_REVISION=prd" >> $GITHUB_ENV
          echo "PROJECT_NUMBER=733870648638" >> $GITHUB_ENV
          echo GKE_REGION="us-east1"       >> $GITHUB_ENV       
            
      - name: configure variables
        run: |
          APP_NAME=${GITHUB_REPOSITORY/'Matrix-Energia/'/}
          APP_NAME=${APP_NAME/matrix./}
          APP_NAME=${APP_NAME//./-}
          ENVIRONMENT_LOWER="${ENVIRONMENT,,}"
          PROJECT_ID="matrix-gke-${ENVIRONMENT_LOWER}"

          echo GKE_CLUSTER="cluster-gke-${ENVIRONMENT_LOWER}"               >> $GITHUB_ENV
          echo PROJECT_ID="matrix-gke-${ENVIRONMENT_LOWER}"                 >> $GITHUB_ENV
          echo REGISTRY_HOSTNAME="gcr.io/${PROJECT_ID}"   >> $GITHUB_ENV
          echo WORKLOAD_IDENTITY_PROVIDER="projects/${PROJECT_NUMBER}/locations/global/workloadIdentityPools/github-pool/providers/github-provider"       >> $GITHUB_ENV
          echo SERVICE_ACCOUNT="github-actions@matrix-gke-${ENVIRONMENT_LOWER}.iam.gserviceaccount.com"                                                          >> $GITHUB_ENV

          echo ENVIRONMENT_LOWER="${ENVIRONMENT_LOWER}"               >> $GITHUB_ENV
          echo APP_NAME="${APP_NAME}"                                 >> $GITHUB_ENV
          echo APP_IMAGE="${GITHUB_REPOSITORY,,}"    >> $GITHUB_ENV
          echo APP_TAG="${GITHUB_SHA:0:8}-${GITHUB_RUN_NUMBER}"       >> $GITHUB_ENV

      # Docker setup
      - name: clone dockerfile
        uses: actions/checkout@v3
        with:
          repository: 'Matrix-Energia/matrix.devops.pipelines.git'
          ref: ${{ env.PIPELINE_REVISION }}
          path: ${{ env.PIPELINE_PATH }}
          token: ${{ secrets.GIT_TOKEN_CUSTOM }}      

      - name: copy dockerfile
        run: mv -f ${{ env.PIPELINE_PATH }}/${{ env.DOCKERFILE_PATH }}/* ./
      - name: Check files
        run: ls -la && ls -la ${{ env.PIPELINE_PATH }}


      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}        
      # Docker registry setup
      - name: configure Docker
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev

      # Helm Setup
      - name: install helm tool
        uses: azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}
      - name: clone helms
        uses: actions/checkout@v3
        with:
          repository: 'Matrix-Energia/matrix.devops.template.charts.git'
          ref: ${{ env.CHART_REVISION }}
          path: ${{ env.CHART_PATH }}
          token: ${{ secrets.GIT_TOKEN_CUSTOM }}

      # Build Application and Container        
      - name: install nodejs ${{ inputs.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}
      
      # Importing and setting up environment variables from keyvault
      - name: get secrets
        run: |
          gcloud secrets versions access latest --secret="$APP_NAME" > app-config.txt
          gcloud secrets versions access latest --secret="elastic-config" > apm-config.txt

      - name: create .env
        run: |
          rm -rf .env
          echo "ELASTIC_APM_SERVICE_NAME=${{ env.APP_NAME }}-${{ env.APP_REVISION }}" > app-name.txt
          cat apm-config.txt | base64 -d >> apm.txt
          cat app-config.txt | base64 -d >> app.txt
          sed -n 'p' apm.txt app-name.txt app.txt > .env 

      - name: create .npmrc
        run: |
          rm -rf .npmrc
          echo "@matrix-energia:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGES_TOKEN }}" >> .npmrc
          cat .npmrc

      # Build steps
      - name: build application
        run: |
          ${{ inputs.build-command }}
          rm -rf ${{ env.OUT_DIR }}} && mkdir ${{ env.OUT_DIR }}
          cp -rf ${{ inputs.output-dir }}/* ${{ env.OUT_DIR }}/
          echo "Output Files: "
          ls -lah ${{ env.OUT_DIR }}
          
      - name: docker build
        run: |
          sed -i "s/ENV_LOWER/${ENVIRONMENT_LOWER}/" Dockerfile
          sed -i "s/APP_NAME/${APP_NAME}/" Dockerfile
          docker build \
            --build-arg ${{ inputs.tokenName }}=${{ secrets.PACKAGES_TOKEN }} \
            -t "us-east1-docker.pkg.dev/${PROJECT_ID}/gke-images/${APP_NAME}:${{ env.APP_TAG }}" \
            -t "us-east1-docker.pkg.dev/${PROJECT_ID}/gke-images/${APP_NAME}:latest" \
            .

      # Docker Push
      - name: docker push
        run: docker push us-east1-docker.pkg.dev/${PROJECT_ID}/gke-images/${APP_NAME} --all-tags

      - name: get kubeconfig
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --region ${{ env.GKE_REGION }} --project ${{ env.PROJECT_ID }}

      - name: install app
        run: |
          helm upgrade ${{env.APP_NAME}} \
            ${{ env.CHART_PATH }}/${{ env.CHART_TYPE }} \
            --atomic \
            --install \
            --wait \
            --timeout 6m0s \
            --namespace '${{ inputs.namespace }}' \
            --set environment='${{env.ENVIRONMENT_LOWER}}' \
            --set image='us-east1-docker.pkg.dev/${{env.PROJECT_ID}}/gke-images/${{env.APP_NAME}}:${{ steps.configure-app.outputs.tag }}' \
            --set repository='${{ github.repository }}' 
